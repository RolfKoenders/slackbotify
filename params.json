{
  "name": "Slackbotify",
  "tagline": "Simple slackbot framework",
  "body": "\r\n# slackbotify\r\n[![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\r\n[![npm](https://img.shields.io/npm/v/slackbotify.svg?maxAge=3600)](https://www.npmjs.com/package/slackbotify)\r\n\r\n> Simple slackbot framework\r\n\r\n## Installation\r\n```\r\nnpm install slackbotify\r\n```\r\n\r\n## Usage\r\nCreating a slackbot is as easy require the dependency, load the config and register a handler. Run it. Done. Slackbot is ready!\r\n\r\n```javascript\r\nconst Bot = require('slackbotify');\r\n\r\nlet bot = new Bot({\r\n\t\"bot\": {\r\n\t\t\"token\": \"xoxb-XXXXX-XXXXX\",\r\n\t\t\"name\": \"butler\"\r\n\t}\r\n});\r\n\r\nbot.registerHandler({\r\n\tgroups: ['direct'],\r\n\tmatch: /hi/ig,\r\n\thandler: function (message, callback) {\r\n\t\tcallback('Hi there! :smiley:');\r\n\t}\r\n});\r\n\r\nbot.registerHandler({\r\n\tgroups: ['channel', 'direct'],\r\n\tmatch: /:smile:/ig,\r\n\thandler: function (message, callback) {\r\n\t\tcallback(':slightly_smiling_face:');\r\n\t}\r\n});\r\n\r\nbot.run();\r\n```\r\n\r\n## Configuration\r\nThe only thing you have to pass to the constructor is a config object, and this config object should have at least a `bot` object with 2 properties: `token` & `name`. _(example above)_\r\n\r\n## Handlers\r\nTo register a handler to the bot simple pass an object to the `registerHandler` function. This object needs to contain the following properties: `group`, `match`, `handler`.\r\n\r\n### Group\r\nThe group defines where the command is available. There are 3 groups. `channel`, `direct`, `admin`. Handlers which are registered to the 'channel' group will fire when a message is send in a channel where the bot is invited to. 'Direct' handlers are private messages to the bot, and the 'admin' group handlers can only be called by an admin user in a private message.\r\n\r\nA handler can be registered to multiple groups. In the example above the first handler is listening to direct messages only. The second handler will be called when a :smile: is send in a private message or in a channel where the bot is in.\r\n\r\n### Match\r\nThe 'match' property is what the message should match in order to get called. This can be a regex or a string.\r\n\r\n### Handler\r\nThe handler is a function which receives as the first argument the slack message object. The result of the matched message is located at `message.matchResult` this is the parsed result by the `.match()` function. The second argument is the callback. The response you give to that callback is send to the user, so basically what the bot will answer.\r\n\r\n## Bots\r\nThe current bots are using slackbotify\r\n- [Mr. Potato](https://github.com/RolfKoenders/potato) _Couchpotato slackbot_\r\n- [Butler](https://github.com/RolfKoenders/butler) _Personal butler_\r\n\r\n## License\r\n[MIT](https://opensource.org/licenses/MIT)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}